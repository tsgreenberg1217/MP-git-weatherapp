// Generated by view binder compiler. Do not edit!
package com.example.headermodules.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.headermodules.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final TextView header1;

  @NonNull
  public final FragmentContainerView header1FragmentContainer;

  @NonNull
  public final TextView header2;

  @NonNull
  public final FragmentContainerView header2FragmentContainer;

  private ActivityMainBinding(@NonNull NestedScrollView rootView, @NonNull TextView header1,
      @NonNull FragmentContainerView header1FragmentContainer, @NonNull TextView header2,
      @NonNull FragmentContainerView header2FragmentContainer) {
    this.rootView = rootView;
    this.header1 = header1;
    this.header1FragmentContainer = header1FragmentContainer;
    this.header2 = header2;
    this.header2FragmentContainer = header2FragmentContainer;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header_1;
      TextView header1 = ViewBindings.findChildViewById(rootView, id);
      if (header1 == null) {
        break missingId;
      }

      id = R.id.header_1_fragment_container;
      FragmentContainerView header1FragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (header1FragmentContainer == null) {
        break missingId;
      }

      id = R.id.header_2;
      TextView header2 = ViewBindings.findChildViewById(rootView, id);
      if (header2 == null) {
        break missingId;
      }

      id = R.id.header_2_fragment_container;
      FragmentContainerView header2FragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (header2FragmentContainer == null) {
        break missingId;
      }

      return new ActivityMainBinding((NestedScrollView) rootView, header1, header1FragmentContainer,
          header2, header2FragmentContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
